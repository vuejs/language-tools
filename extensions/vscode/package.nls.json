{
	"configuration.trace.server": "Traces the communication between VS Code and the language server.",
	"configuration.server.includeLanguages": "Configure the languages for which the extension should be activated.",
	"configuration.doctor.status": "Show known problems in status bar.",
	"configuration.splitEditors.icon": "Show split editor icon in title area of editor.",
	"configuration.splitEditors.layout.left": "Blocks in the left split editor.",
	"configuration.splitEditors.layout.right": "Blocks in the right split editor.",
	"configuration.codeActions.enabled": "Enable code actions.",
	"configuration.codeActions.askNewComponentName": "Ask for new component name when extract component.",

	"configuration.codeLens.enabled": "Enable code lens.",
	"configuration.complete.casing.tags": "Preferred tag name case.",
	"configuration.complete.casing.props": "Preferred attr name case.",
	"configuration.complete.defineAssignment": "Auto add `const props = ` before `defineProps` when selecting the completion item `props`. (also `emit` and `slots`)",
	"configuration.autoInsert.dotValue": "Auto-complete Ref value with `.value`.",
	"configuration.autoInsert.bracketSpacing": "Auto add space between double curly brackets: `{{|}}` -> `{{ | }}`",
	"configuration.inlayHints.destructuredProps": "Show inlay hints for destructured props:\n\n```ts\nwatch(() => /* props. */foo, () => { ... });\n```",
	"configuration.inlayHints.missingProps": "Show inlay hints for missing required props:\n\n```html\n<Comp />\n<!-- ^ foo! -->\n```",
	"configuration.inlayHints.inlineHandlerLeading": "Show inlay hints for event argument in inline handlers:\n\n```html\n<Comp @foo=\"/* $event => */console.log($event)\" />\n```",
	"configuration.inlayHints.optionsWrapper": "Show inlay hints for component options wrapper for type support:\n\n```vue\n<script lang=\"ts\">\nexport default /* (await import('vue')).defineComponent( */{}/* ) */;\n</script>\n```",
	"configuration.inlayHints.vBindShorthand": "Show inlay hints for v-bind shorthand:\n\n```html\n<Comp :foo />\n     <!-- ^ =\"foo\" -->\n```",
	"configuration.format.template.initialIndent": "Initial indent for `<template>` block.",
	"configuration.format.script.initialIndent": "Initial indent for `<script>` block.",
	"configuration.format.style.initialIndent": "Initial indent for `<style>` block.",
	"configuration.format.wrapAttributes": "Wrap attributes.",
	"command.action.restartServer": "Restart Vue and TS servers",
	"command.action.doctor": "Doctor",
	"command.action.splitEditors": "Split <script>, <template>, <style> Editors"
}