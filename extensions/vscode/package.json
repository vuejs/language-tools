{
	"private": true,
	"name": "volar",
	"version": "3.0.0-alpha.4",
	"repository": {
		"type": "git",
		"url": "https://github.com/vuejs/language-tools.git",
		"directory": "extensions/vscode"
	},
	"categories": [
		"Programming Languages"
	],
	"sponsor": {
		"url": "https://github.com/sponsors/johnsoncodehk"
	},
	"icon": "images/icon.png",
	"displayName": "Vue - Official",
	"description": "Language Support for Vue",
	"author": "johnsoncodehk",
	"publisher": "Vue",
	"engines": {
		"vscode": "^1.88.0"
	},
	"activationEvents": [
		"onLanguage:vue",
		"onLanguage:markdown",
		"onLanguage:html"
	],
	"main": "./client.js",
	"browser": "./web.js",
	"capabilities": {
		"virtualWorkspaces": {
			"supported": "limited",
			"description": "Install https://marketplace.visualstudio.com/items?itemName=johnsoncodehk.vscode-typescript-web to have IntelliSense for .vue files in Web IDE."
		}
	},
	"contributes": {
		"jsonValidation": [
			{
				"fileMatch": [
					"tsconfig.json",
					"tsconfig.*.json",
					"tsconfig-*.json",
					"jsconfig.json",
					"jsconfig.*.json",
					"jsconfig-*.json"
				],
				"url": "./dist/schemas/vue-tsconfig.schema.json"
			}
		],
		"languages": [
			{
				"id": "vue",
				"extensions": [
					".vue"
				],
				"configuration": "./languages/vue-language-configuration.json"
			},
			{
				"id": "markdown",
				"configuration": "./languages/markdown-language-configuration.json"
			},
			{
				"id": "html",
				"configuration": "./languages/sfc-template-language-configuration.json"
			},
			{
				"id": "jade",
				"configuration": "./languages/sfc-template-language-configuration.json"
			},
			{
				"id": "plaintext",
				"configuration": "./languages/sfc-template-language-configuration.json"
			}
		],
		"typescriptServerPlugins": [
			{
				"name": "vue-typescript-plugin-pack",
				"enableForWorkspaceTypeScriptVersions": true,
				"configNamespace": "typescript"
			}
		],
		"grammars": [
			{
				"language": "vue",
				"scopeName": "source.vue",
				"path": "./syntaxes/vue.tmLanguage.json",
				"embeddedLanguages": {
					"source.vue": "vue",
					"text": "plaintext",
					"text.html.derivative": "html",
					"text.html.markdown": "markdown",
					"text.pug": "jade",
					"source.css": "css",
					"source.css.scss": "scss",
					"source.css.less": "less",
					"source.sass": "sass",
					"source.stylus": "stylus",
					"source.postcss": "postcss",
					"source.js": "javascript",
					"source.ts": "typescript",
					"source.js.jsx": "javascriptreact",
					"source.tsx": "typescriptreact",
					"source.coffee": "coffeescript",
					"meta.tag.js": "jsx-tags",
					"meta.tag.tsx": "jsx-tags",
					"meta.tag.without-attributes.js": "jsx-tags",
					"meta.tag.without-attributes.tsx": "jsx-tags",
					"source.json": "json",
					"source.json.comments": "jsonc",
					"source.json5": "json5",
					"source.yaml": "yaml",
					"source.toml": "toml",
					"source.graphql": "graphql"
				},
				"unbalancedBracketScopes": [
					"keyword.operator.relational",
					"storage.type.function.arrow",
					"keyword.operator.bitwise.shift",
					"meta.brace.angle",
					"punctuation.definition.tag"
				]
			},
			{
				"scopeName": "markdown.vue.codeblock",
				"path": "./syntaxes/markdown-vue.json",
				"injectTo": [
					"text.html.markdown"
				],
				"embeddedLanguages": {
					"meta.embedded.block.vue": "vue",
					"source.vue": "vue",
					"text": "plaintext",
					"text.html.derivative": "html",
					"text.html.markdown": "markdown",
					"text.pug": "jade",
					"source.css": "css",
					"source.css.scss": "scss",
					"source.css.less": "less",
					"source.sass": "sass",
					"source.stylus": "stylus",
					"source.postcss": "postcss",
					"source.js": "javascript",
					"source.ts": "typescript",
					"source.js.jsx": "javascriptreact",
					"source.tsx": "typescriptreact",
					"source.coffee": "coffeescript",
					"meta.tag.js": "jsx-tags",
					"meta.tag.tsx": "jsx-tags",
					"meta.tag.without-attributes.js": "jsx-tags",
					"meta.tag.without-attributes.tsx": "jsx-tags",
					"source.json": "json",
					"source.json.comments": "jsonc",
					"source.json5": "json5",
					"source.yaml": "yaml",
					"source.toml": "toml",
					"source.graphql": "graphql"
				}
			},
			{
				"scopeName": "mdx.vue.codeblock",
				"path": "./syntaxes/mdx-vue.json",
				"injectTo": [
					"source.mdx"
				],
				"embeddedLanguages": {
					"mdx.embedded.vue": "vue",
					"source.vue": "vue",
					"text": "plaintext",
					"text.html.derivative": "html",
					"text.html.markdown": "markdown",
					"text.pug": "jade",
					"source.css": "css",
					"source.css.scss": "scss",
					"source.css.less": "less",
					"source.sass": "sass",
					"source.stylus": "stylus",
					"source.postcss": "postcss",
					"source.js": "javascript",
					"source.ts": "typescript",
					"source.js.jsx": "javascriptreact",
					"source.tsx": "typescriptreact",
					"source.coffee": "coffeescript",
					"meta.tag.js": "jsx-tags",
					"meta.tag.tsx": "jsx-tags",
					"meta.tag.without-attributes.js": "jsx-tags",
					"meta.tag.without-attributes.tsx": "jsx-tags",
					"source.json": "json",
					"source.json.comments": "jsonc",
					"source.json5": "json5",
					"source.yaml": "yaml",
					"source.toml": "toml",
					"source.graphql": "graphql"
				}
			},
			{
				"scopeName": "vue.directives",
				"path": "./syntaxes/vue-directives.json",
				"injectTo": [
					"source.vue",
					"text.html.markdown",
					"text.html.derivative",
					"text.pug"
				]
			},
			{
				"scopeName": "vue.interpolations",
				"path": "./syntaxes/vue-interpolations.json",
				"injectTo": [
					"source.vue",
					"text.html.markdown",
					"text.html.derivative",
					"text.pug"
				]
			},
			{
				"scopeName": "vue.sfc.style.variable.injection",
				"path": "./syntaxes/vue-sfc-style-variable-injection.json",
				"injectTo": [
					"source.vue"
				]
			}
		],
		"breakpoints": [
			{
				"language": "vue"
			}
		],
		"configuration": {
			"type": "object",
			"title": "Vue",
			"properties": {
				"vue.trace.server": {
					"scope": "window",
					"type": "string",
					"enum": [
						"off",
						"messages",
						"verbose"
					],
					"default": "off",
					"markdownDescription": "%configuration.trace.server%"
				},
				"vue.server.includeLanguages": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [
						"vue"
					],
					"markdownDescription": "%configuration.server.includeLanguages%"
				},
				"vue.doctor.status": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%configuration.doctor.status%"
				},
				"vue.splitEditors.icon": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%configuration.splitEditors.icon%"
				},
				"vue.splitEditors.layout.left": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [
						"script",
						"scriptSetup",
						"styles"
					],
					"markdownDescription": "%configuration.splitEditors.layout.left%"
				},
				"vue.splitEditors.layout.right": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [
						"template",
						"customBlocks"
					],
					"markdownDescription": "%configuration.splitEditors.layout.right%"
				},
				"vue.codeActions.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%configuration.codeActions.enabled%"
				},
				"vue.codeActions.askNewComponentName": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%configuration.codeActions.askNewComponentName%"
				},
				"vue.codeLens.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%configuration.codeLens.enabled%"
				},
				"vue.complete.casing.tags": {
					"type": "string",
					"enum": [
						"autoKebab",
						"autoPascal",
						"kebab",
						"pascal"
					],
					"enumDescriptions": [
						"Auto Detect from Content (Fallback to <kebab-case> if detect failed)",
						"Auto Detect from Content  (Fallback to <PascalCase> if detect failed)",
						"<kebab-case>",
						"<PascalCase>"
					],
					"default": "autoPascal",
					"markdownDescription": "%configuration.complete.casing.tags%"
				},
				"vue.complete.casing.props": {
					"type": "string",
					"enum": [
						"autoKebab",
						"autoCamel",
						"kebab",
						"camel"
					],
					"enumDescriptions": [
						"Auto Detect from Content (Fallback to :kebab-case=\"...\" if detect failed)",
						"Auto Detect from Content (Fallback to :camelCase=\"...\" if detect failed)",
						":kebab-case=\"...\"",
						":camelCase=\"...\""
					],
					"default": "autoKebab",
					"markdownDescription": "%configuration.complete.casing.props%"
				},
				"vue.complete.defineAssignment": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%configuration.complete.defineAssignment%"
				},
				"vue.autoInsert.dotValue": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%configuration.autoInsert.dotValue%"
				},
				"vue.autoInsert.bracketSpacing": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%configuration.autoInsert.bracketSpacing%"
				},
				"vue.inlayHints.destructuredProps": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%configuration.inlayHints.destructuredProps%"
				},
				"vue.inlayHints.missingProps": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%configuration.inlayHints.missingProps%"
				},
				"vue.inlayHints.inlineHandlerLeading": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%configuration.inlayHints.inlineHandlerLeading%"
				},
				"vue.inlayHints.optionsWrapper": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%configuration.inlayHints.optionsWrapper%"
				},
				"vue.inlayHints.vBindShorthand": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%configuration.inlayHints.vBindShorthand%"
				},
				"vue.format.template.initialIndent": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%configuration.format.template.initialIndent%"
				},
				"vue.format.script.initialIndent": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%configuration.format.script.initialIndent%"
				},
				"vue.format.style.initialIndent": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%configuration.format.style.initialIndent%"
				},
				"vue.format.wrapAttributes": {
					"type": "string",
					"default": "auto",
					"enum": [
						"auto",
						"force",
						"force-aligned",
						"force-expand-multiline",
						"aligned-multiple",
						"preserve",
						"preserve-aligned"
					],
					"markdownDescription": "%configuration.format.wrapAttributes%"
				}
			}
		},
		"commands": [
			{
				"command": "vue.action.restartServer",
				"title": "%command.action.restartServer%",
				"category": "Vue"
			},
			{
				"command": "vue.action.doctor",
				"title": "%command.action.doctor%",
				"category": "Vue"
			},
			{
				"command": "vue.action.splitEditors",
				"title": "%command.action.splitEditors%",
				"category": "Vue",
				"icon": "images/split-editors.png"
			}
		],
		"menus": {
			"editor/context": [
				{
					"command": "typescript.goToSourceDefinition",
					"when": "tsSupportsSourceDefinition && resourceLangId == vue",
					"group": "navigation@9"
				}
			],
			"explorer/context": [
				{
					"command": "typescript.findAllFileReferences",
					"when": "tsSupportsFileReferences && resourceLangId == vue",
					"group": "4_search"
				}
			],
			"editor/title/context": [
				{
					"command": "typescript.findAllFileReferences",
					"when": "tsSupportsFileReferences && resourceLangId == vue"
				}
			],
			"commandPalette": [
				{
					"command": "typescript.reloadProjects",
					"when": "editorLangId == vue && typescript.isManagedFile"
				},
				{
					"command": "typescript.goToProjectConfig",
					"when": "editorLangId == vue"
				},
				{
					"command": "vue.action.doctor",
					"when": "vue.activated"
				},
				{
					"command": "vue.action.splitEditors",
					"when": "editorLangId == vue"
				}
			],
			"editor/title": [
				{
					"command": "vue.action.splitEditors",
					"when": "resourceLangId == vue && config.vue.splitEditors.icon",
					"group": "navigation"
				}
			]
		},
		"problemMatchers": [
			{
				"name": "vite",
				"label": "Vite problems",
				"pattern": {
					"regexp": ""
				},
				"background": {
					"activeOnStart": true,
					"beginsPattern": "restarting server...$",
					"endsPattern": "\\s*ready in|server restarted."
				}
			}
		]
	},
	"scripts": {
		"prebuild": "pnpm run postinstall && pnpm -C ../.. run build",
		"build": "node scripts/build",
		"build:minify": "pnpm run build -- --minify",
		"watch": "pnpm run build -- --watch",
		"pack": "pnpm run build:minify && vsce package",
		"pack:next": "pnpm run build && vsce package",
		"release": "pnpm run build:minify && vsce publish",
		"release:next": "pnpm run build && vsce publish --pre-release",
		"size": "pnpm run build:minify -- --metafile && esbuild-visualizer --metadata ./meta.json && open ./stats.html",
		"postinstall": "vscode-ext-gen --scope vue"
	},
	"devDependencies": {
		"@types/semver": "^7.5.3",
		"@types/vscode": "^1.82.0",
		"@volar/vscode": "~2.4.11",
		"@vscode/vsce": "^3.2.1",
		"@vue/language-core": "3.0.0-alpha.4",
		"@vue/language-server": "3.0.0-alpha.4",
		"@vue/typescript-plugin": "3.0.0-alpha.4",
		"esbuild": "^0.25.0",
		"esbuild-visualizer": "^0.7.0",
		"reactive-vscode": "^0.2.9",
		"semver": "^7.5.4",
		"vscode-ext-gen": "^0.5.0",
		"vscode-tmlanguage-snapshot": "^0.1.3"
	}
}
