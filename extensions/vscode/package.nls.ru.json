{
	"configuration.trace.server": "Отслеживать коммуникацию между VS Code и языковым сервером Vue.",
	"configuration.server.includeLanguages": "Языки, для которых будет включено расширение.",
	"configuration.splitEditors.icon": "Отображать иконку разделенного редактора в области заголовка редактора.",
	"configuration.splitEditors.layout.left": "Блоки в левой панели редактора.",
	"configuration.splitEditors.layout.right": "Блоки в правой панели редактора.",
	"configuration.codeActions.askNewComponentName": "Запрашивать новое имя компонента при извлечении компонента.",
	"configuration.suggest.componentNameCasing": "Предпочитаемый формат имени компонента.",
	"configuration.suggest.propNameCasing": "Предпочитаемый формат имени атрибута.",
	"configuration.suggest.defineAssignment": "Автоматически добавлять `const props = ` перед `defineProps` при выборе элемента завершения `props`. (также `emit` и `slots`)",
	"configuration.autoInsert.dotValue": "Автоматически добавлять `.value` при вводе реактивной переменной",
	"configuration.autoInsert.bracketSpacing": "Автоматически добавлять пробелы между двойными фигурными скобками: `{{|}}` -> `{{ | }}`",
	"configuration.inlayHints.destructuredProps": "Отображать подсказки для деструктурированных props:\n\n```ts\nwatch(() => /* props. */foo, () => { ... });\n```",
	"configuration.inlayHints.missingProps": "Отображать подсказки для отсутствующих обязательных атрибутов:\n\n```html\n<Comp />\n<!-- ^ foo! -->\n```",
	"configuration.inlayHints.inlineHandlerLeading": "Отображать подсказки для аргументов встроенных обработчиков событий:\n\n```html\n<Comp @foo=\"/* $event => */console.log($event)\" />\n```",
	"configuration.inlayHints.optionsWrapper": "Отображать подсказки для оберток компонентов:\n\n```vue\n<script lang=\"ts\">\nexport default /* (await import('vue')).defineComponent( */{}/* ) */;\n</script>\n```",
	"configuration.inlayHints.vBindShorthand": "Отображать подсказки для сокращенного синтаксиса v-bind:\n\n```html\n<Comp :foo />\n     <!-- ^ =\"foo\" -->\n```",
	"configuration.format.template.initialIndent": "Начальный отступ для блока `<template>`.",
	"configuration.format.script.initialIndent": "Начальный отступ для блока `<script>`.",
	"configuration.format.style.initialIndent": "Начальный отступ для блока `<style>`.",
	"configuration.format.wrapAttributes": "Переносить атрибуты.",
	"command.action.restartServer": "Перезапустить Vue и TS серверы",
	"command.action.splitEditors": "Разделить `<script>`, `<template>`, `<style>` редакторы"
}
