[
	{
		"message": "Use taking over mode instead of TypeScript Vue Plugin to reduce memory usage.",
		"when": "vscode.extensions.getExtension('vscode.typescript-language-features') && vscode.extensions.getExtension('johnsoncodehk.vscode-typescript-vue-plugin')",
		"locales": {
			"zh-cn": "以take over mode代替TypeScript Vue Plugin来减少內存占用",
			"zh-tw": "以take over mode代替TypeScript Vue Plugin來減少記憶體佔用"
		}
	},
	{
		"message": "Config `editor.linkedEditing` to enable Auto Rename Tag.",
		"when": "!vscode.workspace.getConfiguration('editor').get('linkedEditing') || vscode.extensions.getExtension('formulahendry.auto-rename-tag')",
		"locales": {
			"zh-cn": "设置`editor.linkedEditing`来启用Auto Rename Tag",
			"zh-tw": "設置`editor.linkedEditing`來啟用Auto Rename Tag"
		}
	},
	{
		"message": "Config `html.autoClosingTags` to enable Auto Close Tag.",
		"when": "!vscode.workspace.getConfiguration('html').get('autoClosingTags') || vscode.extensions.getExtension('formulahendry.auto-close-tag')",
		"locales": {
			"zh-cn": "设置`html.autoClosingTags`来启用Auto Close Tag",
			"zh-tw": "設置`html.autoClosingTags`來啟用Auto Close Tag"
		}
	},
	{
		"message": "Config `volar.codeLens.pugTools` to show HTML <-> Pug code converter.",
		"when": "!vscode.workspace.getConfiguration('volar').get('codeLens.pugTools')",
		"locales": {
			"zh-cn": "设置`volar.codeLens.pugTools`来显示HTML <-> Pug代码转换器",
			"zh-tw": "設置`volar.codeLens.pugTools`來顯示HTML <-> Pug代碼轉換器"
		}
	},
	{
		"message": "Config `volar.codeLens.scriptSetupTools` to show <script setup> and ref sugar code converters.",
		"when": "!vscode.workspace.getConfiguration('volar').get('codeLens.scriptSetupTools')",
		"locales": {
			"zh-cn": "设置`volar.codeLens.scriptSetupTools`来显示<script setup>和ref sugar代码转换器",
			"zh-tw": "設置`volar.codeLens.scriptSetupTools`來顯示<script setup>和ref sugar代碼轉換器"
		}
	},
	{
		"message": "If CPU usage too high, check out `volar.lowPowerMode`.",
		"locales": {
			"zh-cn": "如果CPU占用太高了，看看`volar.lowPowerMode`",
			"zh-tw": "如果CPU佔用太高了，看看`volar.lowPowerMode`"
		}
	},
	{
		"message": "Don't like auto typing `.value`? Config `volar.autoCompleteRefs` to disable it.",
		"when": "vscode.workspace.getConfiguration('volar').get('autoCompleteRefs')",
		"locales": {
			"zh-cn": "不喜欢自动键入`.value`吗？设置`volar.autoCompleteRefs`来禁用它",
			"zh-tw": "不喜歡自動鍵入`.value`嗎？設置`volar.autoCompleteRefs`來禁用它"
		}
	},
	{
		"message": "Quick jumping between `<template>`, `<script>`, `<style>` with `⇧⌘O`.",
		"locales": {
			"zh-cn": "使用`⇧⌘O`在`<template>`, `<script>`, `<style>`之间快速跳转",
			"zh-tw": "使用`⇧⌘O`在`<template>`, `<script>`, `<style>`之間快速跳轉"
		}
	},
	{
		"message": "Quick jumping to a symbol across files with `⌘T`.",
		"locales": {
			"zh-cn": "使用`⌘T`快速跳转到跨文件的符号(Symbol)",
			"zh-tw": "使用`⌘T`快速跳轉到跨文件的符號(Symbol)"
		}
	},
	{
		"message": "You may want to use `compilerOptions.noUnusedLocals` instead of `@typescript-eslint/no-unused-vars`.",
		"when": "vscode.extensions.getExtension('dbaeumer.vscode-eslint')",
		"locales": {
			"zh-cn": "你可能想用`compilerOptions.noUnusedLocals`代替`@typescript-eslint/no-unused-vars`",
			"zh-tw": "你可能想用`compilerOptions.noUnusedLocals`代替`@typescript-eslint/no-unused-vars`"
		}
	},
	{
		"message": "Config `compilerOptions.paths` to support intellisense for special path alias in TS + HTML + CSS.",
		"locales": {
			"zh-cn": "设置`compilerOptions.paths`以在TS + HTML + CSS中支持特殊路径别名的智能提示",
			"zh-tw": "設置`compilerOptions.paths`以在TS + HTML + CSS中支持特殊路徑別名的智能提示"
		}
	},
	{
		"message": "Run `Volar: Verify All Scripts` to check project in IDE. Use vue-tsc to check project in CLI.",
		"locales": {
			"zh-cn": "在IDE中运行`Volar: Verify All Scripts`或在CLI中使用vue-tsc来检查整个项目",
			"zh-tw": "在IDE中運行`Volar: Verify All Scripts`或在CLI中使用vue-tsc來檢查整個項目"
		}
	},
	{
		"message": "Define GlobalComponents interface add type support and intellisense for your global components.",
		"locales": {
			"zh-cn": "定义GlobalComponents interface为你的全局组件增加类型支持和智能提示",
			"zh-tw": "定義GlobalComponents interface為你的全局組件增加類型支持和智能提示"
		}
	},
	{
		"message": "If <style> use postcss, stylus, sass language. Make sure installed correct syntax highlight extension.",
		"locales": {
			"zh-cn": "如果<style>使用了postcss, stylus, sass语言，确保安装了对应的语法高亮扩展",
			"zh-tw": "如果<style>使用了postcss, stylus, sass語言，確保安裝了對應的語法高亮擴展"
		}
	},
	{
		"message": "Has expected JSX error in <template>? Check out #592.",
		"locales": {
			"zh-cn": "在<template>中有意外的JSX错误吗？看看#592",
			"zh-tw": "在<template>中有意外的JSX錯誤嗎？看看#592"
		}
	},
	{
		"message": "`@ts-ignore` is avaliable in template interpolation.",
		"locales": {
			"zh-cn": "`@ts-ignore`在模版插值中是可用的",
			"zh-tw": "`@ts-ignore`在模版插值中是可用的"
		}
	},
	{
		"message": "If block comment brackets incorrect in HTML, TS, CSS. Usually caused by other poorly maintained extensions",
		"locales": {
			"zh-cn": "如果HTML, TS, CSS中的块注释括号不正确，通常是由其他缺乏维护的扩展引起",
			"zh-tw": "如果HTML, TS, CSS中的塊注釋括號不正確，通常是由其他缺乏維護的擴展引起"
		}
	},
	{
		"message": "If your component tags alway show red color or invalid color, check out #522.",
		"locales": {
			"zh-cn": "如果你的组件标籤始终显示红色或无效色，看看#522",
			"zh-tw": "如果你的組件標籤始終顯示紅色或無效色，看看#522"
		}
	},
	{
		"message": "If ref variable is `Ref<...>` type in template, check out #322.",
		"locales": {
			"zh-cn": "如果ref变量在模版中是`Ref<...>`类型，看看#322",
			"zh-tw": "如果ref變量在模版中是`Ref<...>`類型，看看#322"
		}
	},
	{
		"message": "For Vitepress project, you may need to config `\"include\": [\"src/.vitepress/**/*\"]`",
		"locales": {
			"zh-cn": "对于Vitepress项目，你可能需要设置`\"include\": [\"src/.vitepress/**/*\"]`",
			"zh-tw": "對於Vitepress項目，你可能需要設置`\"include\": [\"src/.vitepress/**/*\"]`"
		}
	}
]