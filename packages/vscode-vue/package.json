{
	"private": true,
	"name": "volar",
	"version": "1.8.6",
	"repository": {
		"type": "git",
		"url": "https://github.com/vuejs/language-tools.git",
		"directory": "packages/vscode-vue"
	},
	"categories": [
		"Programming Languages"
	],
	"sponsor": {
		"url": "https://github.com/sponsors/johnsoncodehk"
	},
	"icon": "images/icon.png",
	"displayName": "Vue Language Features (Volar)",
	"description": "Language support for Vue 3",
	"author": "johnsoncodehk",
	"publisher": "Vue",
	"engines": {
		"vscode": "^1.67.0"
	},
	"activationEvents": [
		"onLanguage:vue",
		"onLanguage:markdown",
		"onLanguage:html",
		"onLanguage:javascript",
		"onLanguage:typescript",
		"onLanguage:javascriptreact",
		"onLanguage:typescriptreact"
	],
	"main": "./client.js",
	"browser": "./web.js",
	"capabilities": {
		"virtualWorkspaces": {
			"supported": "limited",
			"description": "Install https://marketplace.visualstudio.com/items?itemName=johnsoncodehk.vscode-typescript-web to have IntelliSense for .vue files in Web IDE."
		},
		"untrustedWorkspaces": {
			"supported": "limited",
			"description": "%volar.workspaceTrust.description%",
			"restrictedConfigurations": [
				"typescript.tsdk",
				"typescript.tsserver.pluginPaths",
				"typescript.npm"
			]
		}
	},
	"contributes": {
		"jsonValidation": [
			{
				"fileMatch": "tsconfig.json",
				"url": "https://json.schemastore.org/tsconfig"
			},
			{
				"fileMatch": "tsconfig.*.json",
				"url": "https://json.schemastore.org/tsconfig"
			},
			{
				"fileMatch": "tsconfig-*.json",
				"url": "https://json.schemastore.org/tsconfig"
			},
			{
				"fileMatch": "typings.json",
				"url": "https://json.schemastore.org/typings"
			},
			{
				"fileMatch": ".bowerrc",
				"url": "https://json.schemastore.org/bowerrc"
			},
			{
				"fileMatch": ".babelrc",
				"url": "https://json.schemastore.org/babelrc"
			},
			{
				"fileMatch": ".babelrc.json",
				"url": "https://json.schemastore.org/babelrc"
			},
			{
				"fileMatch": "babel.config.json",
				"url": "https://json.schemastore.org/babelrc"
			},
			{
				"fileMatch": "jsconfig.json",
				"url": "https://json.schemastore.org/jsconfig"
			},
			{
				"fileMatch": "jsconfig.*.json",
				"url": "https://json.schemastore.org/jsconfig"
			},
			{
				"fileMatch": "tsconfig.json",
				"url": "./dist/schemas/vue-tsconfig.schema.json"
			},
			{
				"fileMatch": "tsconfig-*.json",
				"url": "./dist/schemas/vue-tsconfig.schema.json"
			},
			{
				"fileMatch": "tsconfig.*.json",
				"url": "./dist/schemas/vue-tsconfig.schema.json"
			},
			{
				"fileMatch": "jsconfig.json",
				"url": "./dist/schemas/vue-tsconfig.schema.json"
			},
			{
				"fileMatch": "jsconfig-*.json",
				"url": "./dist/schemas/vue-tsconfig.schema.json"
			},
			{
				"fileMatch": "jsconfig.*.json",
				"url": "./dist/schemas/vue-tsconfig.schema.json"
			},
			{
				"fileMatch": "tsconfig.json",
				"url": "./dist/schemas/vue-tsconfig.deprecated.schema.json"
			},
			{
				"fileMatch": "tsconfig-*.json",
				"url": "./dist/schemas/vue-tsconfig.deprecated.schema.json"
			},
			{
				"fileMatch": "tsconfig.*.json",
				"url": "./dist/schemas/vue-tsconfig.deprecated.schema.json"
			},
			{
				"fileMatch": "jsconfig.json",
				"url": "./dist/schemas/vue-tsconfig.deprecated.schema.json"
			},
			{
				"fileMatch": "jsconfig-*.json",
				"url": "./dist/schemas/vue-tsconfig.deprecated.schema.json"
			},
			{
				"fileMatch": "jsconfig.*.json",
				"url": "./dist/schemas/vue-tsconfig.deprecated.schema.json"
			}
		],
		"semanticTokenScopes": [
			{
				"language": "vue",
				"scopes": {
					"component": [
						"support.class.component.vue"
					]
				}
			},
			{
				"language": "markdown",
				"scopes": {
					"component": [
						"support.class.component.vue"
					]
				}
			},
			{
				"language": "html",
				"scopes": {
					"component": [
						"support.class.component.vue"
					]
				}
			}
		],
		"languages": [
			{
				"id": "vue",
				"extensions": [
					".vue"
				],
				"configuration": "./languages/vue-language-configuration.json"
			},
			{
				"id": "markdown",
				"configuration": "./languages/markdown-language-configuration.json"
			},
			{
				"id": "html",
				"configuration": "./languages/sfc-template-language-configuration.json"
			},
			{
				"id": "jade",
				"configuration": "./languages/sfc-template-language-configuration.json"
			},
			{
				"id": "plaintext",
				"configuration": "./languages/sfc-template-language-configuration.json"
			},
			{
				"id": "vue-injection-markdown"
			},
			{
				"id": "vue-directives"
			},
			{
				"id": "vue-interpolations"
			},
			{
				"id": "vue-sfc-style-variable-injection"
			}
		],
		"grammars": [
			{
				"language": "vue",
				"scopeName": "source.vue",
				"path": "./syntaxes/vue.tmLanguage.json",
				"embeddedLanguages": {
					"source.vue": "vue",
					"text": "plaintext",
					"text.html.derivative": "html",
					"text.html.markdown": "markdown",
					"text.pug": "jade",
					"source.css": "css",
					"source.css.scss": "scss",
					"source.css.less": "less",
					"source.sass": "sass",
					"source.stylus": "stylus",
					"source.postcss": "postcss",
					"source.js": "javascript",
					"source.ts": "typescript",
					"source.js.jsx": "javascriptreact",
					"source.tsx": "typescriptreact",
					"meta.tag.js": "jsx-tags",
					"meta.tag.tsx": "jsx-tags",
					"meta.tag.without-attributes.js": "jsx-tags",
					"meta.tag.without-attributes.tsx": "jsx-tags",
					"source.json": "json",
					"source.json.comments": "jsonc",
					"source.json5": "json5",
					"source.yaml": "yaml",
					"source.toml": "toml",
					"source.graphql": "graphql"
				},
				"unbalancedBracketScopes": [
					"keyword.operator.relational",
					"storage.type.function.arrow",
					"keyword.operator.bitwise.shift",
					"meta.brace.angle",
					"punctuation.definition.tag"
				]
			},
			{
				"language": "vue-injection-markdown",
				"scopeName": "markdown.vue.codeblock",
				"path": "./syntaxes/markdown-vue.json",
				"injectTo": [
					"text.html.markdown"
				],
				"embeddedLanguages": {
					"meta.embedded.block.vue": "vue",
					"source.vue": "vue",
					"text": "plaintext",
					"text.html.derivative": "html",
					"text.html.markdown": "markdown",
					"text.pug": "jade",
					"source.css": "css",
					"source.css.scss": "scss",
					"source.css.less": "less",
					"source.sass": "sass",
					"source.stylus": "stylus",
					"source.postcss": "postcss",
					"source.js": "javascript",
					"source.ts": "typescript",
					"source.js.jsx": "javascriptreact",
					"source.tsx": "typescriptreact",
					"meta.tag.js": "jsx-tags",
					"meta.tag.tsx": "jsx-tags",
					"meta.tag.without-attributes.js": "jsx-tags",
					"meta.tag.without-attributes.tsx": "jsx-tags",
					"source.json": "json",
					"source.json.comments": "jsonc",
					"source.json5": "json5",
					"source.yaml": "yaml",
					"source.toml": "toml",
					"source.graphql": "graphql"
				}
			},
			{
				"language": "vue-directives",
				"scopeName": "vue.directives",
				"path": "./syntaxes/vue-directives.json",
				"injectTo": [
					"source.vue",
					"text.html.markdown",
					"text.html.derivative",
					"text.pug"
				]
			},
			{
				"language": "vue-interpolations",
				"scopeName": "vue.interpolations",
				"path": "./syntaxes/vue-interpolations.json",
				"injectTo": [
					"source.vue",
					"text.html.markdown",
					"text.html.derivative",
					"text.pug"
				]
			},
			{
				"language": "vue-sfc-style-variable-injection",
				"scopeName": "vue.sfc.style.variable.injection",
				"path": "./syntaxes/vue-sfc-style-variable-injection.json",
				"injectTo": [
					"source.vue"
				]
			}
		],
		"breakpoints": [
			{
				"language": "vue"
			}
		],
		"configuration": {
			"type": "object",
			"title": "Volar",
			"properties": {
				"typescript.tsdk": {
					"type": "string"
				},
				"volar.format.initialIndent": {
					"type": "object",
					"description": "Whether to have initial indent.",
					"default": {
						"html": true
					},
					"properties": {
						"html": {
							"type": "boolean",
							"default": true
						},
						"typescript": {
							"type": "boolean",
							"default": false
						},
						"javascript": {
							"type": "boolean",
							"default": false
						},
						"typescriptreact": {
							"type": "boolean",
							"default": false
						},
						"javascriptreact": {
							"type": "boolean",
							"default": false
						},
						"css": {
							"type": "boolean",
							"default": false
						},
						"scss": {
							"type": "boolean",
							"default": false
						},
						"less": {
							"type": "boolean",
							"default": false
						},
						"sass": {
							"type": "boolean",
							"default": false
						},
						"jade": {
							"type": "boolean",
							"default": false
						},
						"json": {
							"type": "boolean",
							"default": false
						},
						"jsonc": {
							"type": "boolean",
							"default": false
						},
						"json5": {
							"type": "boolean",
							"default": false
						}
					}
				},
				"volar.takeOverMode.extension": {
					"type": "string",
					"default": "Vue.volar",
					"description": "The extension that take over language support for *.ts."
				},
				"vue-semantic-server.trace.server": {
					"scope": "window",
					"type": "string",
					"enum": [
						"off",
						"messages",
						"verbose"
					],
					"default": "off",
					"description": "Traces the communication between VS Code and the language server."
				},
				"vue-syntactic-server.trace.server": {
					"scope": "window",
					"type": "string",
					"enum": [
						"off",
						"messages",
						"verbose"
					],
					"default": "off",
					"description": "Traces the communication between VS Code and the language server."
				},
				"vue.server.configFilePath": {
					"type": "string",
					"default": "./volar.config.js",
					"description": "Path to volar.config.js."
				},
				"vue.server.maxFileSize": {
					"type": "number",
					"default": 20971520,
					"description": "Maximum file size for Vue Server to load. (default: 20MB)"
				},
				"vue.server.petiteVue.supportHtmlFile": {
					"type": "boolean",
					"default": false
				},
				"vue.server.vitePress.supportMdFile": {
					"type": "boolean",
					"default": false
				},
				"vue.server.diagnosticModel": {
					"type": "string",
					"default": "push",
					"enum": [
						"push",
						"pull"
					],
					"enumDescriptions": [
						"Diagnostic push by language server.",
						"Diagnostic pull by language client."
					],
					"description": "Diagnostic update model."
				},
				"vue.server.maxOldSpaceSize": {
					"type": [
						"number",
						"null"
					],
					"default": null,
					"description": "Set --max-old-space-size option on server process. If you have problem on frequently \"Request textDocument/** failed.\" error, try setting higher memory(MB) on it."
				},
				"vue.server.reverseConfigFilePriority": {
					"type": "boolean",
					"default": false,
					"description": "Reverse priority for tsconfig pickup."
				},
				"vue.server.additionalExtensions": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [],
					"description": "List any additional file extensions that should be processed as Vue files (requires restart)."
				},
				"vue.server.fullCompletionList": {
					"type": "boolean",
					"default": false,
					"description": "Enable this option if you want to get complete CompletionList in language client. (Disable for better performance)"
				},
				"vue.doctor.status": {
					"type": "boolean",
					"default": true,
					"description": "Show known problems in status bar."
				},
				"vue.splitEditors.icon": {
					"type": "boolean",
					"default": false,
					"description": "Show split editor icon in title area of editor."
				},
				"vue.splitEditors.layout.left": {
					"type": "array",
					"default": [
						"script",
						"scriptSetup",
						"styles"
					]
				},
				"vue.splitEditors.layout.right": {
					"type": "array",
					"default": [
						"template",
						"customBlocks"
					]
				},
				"vue.updateImportsOnFileMove.enabled": {
					"type": "boolean",
					"default": false,
					"description": "Enabled update imports on file move."
				},
				"vue.codeActions.enabled": {
					"type": "boolean",
					"default": true,
					"description": "Enabled code actions."
				},
				"vue.codeActions.savingTimeLimit": {
					"type": "number",
					"default": 1000,
					"description": "Time limit for code actions on save (ms)."
				},
				"vue.codeLens.enabled": {
					"type": "boolean",
					"default": true,
					"description": "Enabled code lens."
				},
				"vue.complete.casing.tags": {
					"type": "string",
					"enum": [
						"autoKebab",
						"autoPascal",
						"kebab",
						"pascal"
					],
					"enumDescriptions": [
						"Auto Detect from Content (Fallback to <kebab-case> if detect failed)",
						"Auto Detect from Content  (Fallback to <PascalCase> if detect failed)",
						"<kebab-case>",
						"<PascalCase>"
					],
					"default": "autoPascal",
					"description": "Preferred tag name case."
				},
				"vue.complete.casing.props": {
					"type": "string",
					"enum": [
						"autoKebab",
						"autoCamel",
						"kebab",
						"camel"
					],
					"enumDescriptions": [
						"Auto Detect from Content (Fallback to :kebab-case=\"...\" if detect failed)",
						"Auto Detect from Content (Fallback to :camelCase=\"...\" if detect failed)",
						":kebab-case=\"...\"",
						":camelCase=\"...\""
					],
					"default": "autoKebab",
					"description": "Preferred attr name case."
				},
				"vue.complete.casing.status": {
					"type": "boolean",
					"default": true,
					"description": "Show name casing in status bar."
				},
				"vue.complete.normalizeComponentImportName": {
					"type": "boolean",
					"default": true,
					"description": "Normalize import name for auto import. (\"myCompVue\" -> \"MyComp\")"
				},
				"vue.autoInsert.parentheses": {
					"type": "boolean",
					"default": true,
					"description": "Auto-wrap `()` to As Expression in interpolations for fix issue #520."
				},
				"vue.autoInsert.dotValue": {
					"type": "boolean",
					"default": false,
					"description": "Auto-complete Ref value with `.value`."
				},
				"vue.autoInsert.bracketSpacing": {
					"type": "boolean",
					"default": true,
					"description": "Auto add space between double curly brackets: {{|}} -> {{ | }}"
				},
				"vue.inlayHints.missingProps": {
					"type": "boolean",
					"default": false,
					"description": "Show inlay hints for missing required props."
				},
				"vue.inlayHints.inlineHandlerLeading": {
					"type": "boolean",
					"default": false,
					"description": "Show inlay hints for event argument in inline handlers."
				},
				"vue.inlayHints.optionsWrapper": {
					"type": "boolean",
					"default": false,
					"description": "Show inlay hints for component options wrapper for type support."
				}
			}
		},
		"commands": [
			{
				"command": "volar.action.restartServer",
				"title": "Restart Vue server",
				"category": "Volar"
			},
			{
				"command": "volar.action.reloadProject",
				"title": "Reload Project",
				"category": "Volar"
			},
			{
				"command": "volar.action.doctor",
				"title": "Doctor",
				"category": "Volar"
			},
			{
				"command": "volar.action.writeVirtualFiles",
				"title": "Write Virtual Files",
				"category": "Volar (Debug)"
			},
			{
				"command": "volar.action.showComponentMeta",
				"title": "Show Component Meta",
				"category": "Volar"
			},
			{
				"command": "volar.action.splitEditors",
				"title": "Split <script>, <template>, <style> Editors",
				"category": "Volar",
				"icon": "images/split-editors.png"
			},
			{
				"command": "volar.selectTypeScriptVersion",
				"title": "Select TypeScript Version...",
				"category": "Volar"
			},
			{
				"command": "volar.vue.findAllFileReferences",
				"title": "Vue: Find File References",
				"category": "Volar"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "volar.action.restartServer",
					"when": "volar.activated"
				},
				{
					"command": "volar.action.reloadProject",
					"when": "volar.activated"
				},
				{
					"command": "volar.action.doctor",
					"when": "volar.activated"
				},
				{
					"command": "volar.action.writeVirtualFiles",
					"when": "volar.activated"
				},
				{
					"command": "volar.action.splitEditors",
					"when": "editorLangId == vue"
				},
				{
					"command": "volar.selectTypeScriptVersion",
					"when": "volar.activated"
				}
			],
			"editor/title": [
				{
					"command": "volar.action.splitEditors",
					"when": "resourceLangId == vue && config.vue.splitEditors.icon",
					"group": "navigation"
				}
			],
			"explorer/context": [
				{
					"command": "volar.vue.findAllFileReferences",
					"when": "resourceLangId == typescript",
					"group": "4_search"
				},
				{
					"command": "volar.vue.findAllFileReferences",
					"when": "resourceLangId == typescriptreact",
					"group": "4_search"
				},
				{
					"command": "volar.vue.findAllFileReferences",
					"when": "resourceLangId == javascript",
					"group": "4_search"
				},
				{
					"command": "volar.vue.findAllFileReferences",
					"when": "resourceLangId == javascriptreact",
					"group": "4_search"
				},
				{
					"command": "volar.vue.findAllFileReferences",
					"when": "resourceLangId == vue",
					"group": "4_search"
				},
				{
					"command": "volar.vue.findAllFileReferences",
					"when": "resourceLangId == html",
					"group": "4_search"
				}
			]
		},
		"problemMatchers": [
			{
				"name": "vite",
				"label": "Vite problems",
				"pattern": {
					"regexp": ""
				},
				"background": {
					"activeOnStart": true,
					"beginsPattern": "restarting server...$",
					"endsPattern": "\\s*ready in|server restarted."
				}
			}
		]
	},
	"scripts": {
		"prebuild": "cd ../.. && npm run build",
		"build": "node scripts/build",
		"build:minify": "npm run build -- --minify",
		"watch": "npm run build -- --watch",
		"pack": "npm run build:minify && vsce package",
		"pack:next": "npm run build && vsce package",
		"release": "npm run build:minify && vsce publish",
		"release:next": "npm run build && vsce publish --pre-release",
		"bundle-size": "npm run build:minify --metafile && esbuild-visualizer --metadata ./meta.json && open ./stats.html"
	},
	"devDependencies": {
		"@types/semver": "^7.3.13",
		"@types/vscode": "1.67.0",
		"@volar/vscode": "~1.10.0",
		"@vue/language-core": "1.8.6",
		"@vue/language-server": "1.8.6",
		"esbuild": "0.15.18",
		"esbuild-plugin-copy": "latest",
		"esbuild-visualizer": "latest",
		"semver": "^7.3.8",
		"vsce": "latest",
		"vscode-languageclient": "^8.1.0"
	}
}
